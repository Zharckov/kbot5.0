const { vk, cfg, logger } = require('../vk.index');
const { VK } = require('vk-io');
const user = new VK({ token: cfg.vk.users.creator.token });
const countdown = require('countdown');

user.updates.start();
user.updates.on('message_new', (ctx, next) => {
	if(ctx.peerId != cfg.vk.users.creator.peerId){return 1;}
	try {

	} catch(error){
		
	}
});

setInterval(()=>{
	let downTime = countdown(new Date('2019/10/08'), 'now');
	let status = `‚ù§ –ù–∞—á–∞–ª–æ: 08.10.2019 | ‚åö –ü—Ä–æ—à–ª–æ: ${downTime.years} –≥–æ–¥. ${downTime.months} –º–µ—Å. ${downTime.days} –¥–Ω. | üö´ –ö–æ–Ω–µ—Ü: –ù–∏–∫–æ–≥–¥–∞`;
	user.api.status.set({
		text: status
	}).catch((e)=>{
		logger.warn.vk(`–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: ${e.message}`, 'vk');
	});
}, 1000 * 60 * 10);